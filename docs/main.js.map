{"version":3,"sources":["./src/app/model/week-day.ts","./src/app/weekday.pipe.ts","./src/environments/environment.ts","./src/app/common/resort.pipe.ts","./src/app/criteria/criteria.component.ts","./src/app/criteria/criteria.component.html","./src/app/app.service.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/accommodation-type.ts","./src/app/model/stay.ts","./src/app/app.module.ts","./src/app/cell/cell.component.ts","./src/app/cell/cell.component.html","./src/app/helper.service.ts","./src/app/model/resort.ts","./src/app/tile-selectable/tile-selectable.component.ts","./src/app/tile-selectable/tile-selectable.component.html","./src/app/common/accommodation-type.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum WEEKDAY {\r\n  SUNDAY,\r\n  MONDAY,\r\n  TUESDAY,\r\n  WEDNESDAY,\r\n  THURSDAY,\r\n  FRIDAY,\r\n  SATURDAY\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'weekday'\n})\nexport class WeekdayPipe implements PipeTransform {\n\n  transform(value: string): string {\n    switch (value) {\n      case 'Monday':\n        return 'Poniedziałek';\n      case 'Tuesday':\n        return 'Wtorek';\n      case 'Wednesday':\n        return 'Środa';\n      case 'Thursday':\n        return 'Czwartek';\n      case 'Friday':\n        return 'Piątek';\n      case 'Saturday':\n        return 'Sobota';\n      default:\n        return 'Niedziela';\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Resort} from '../model/resort';\n\n@Pipe({\n  name: 'resort'\n})\nexport class ResortPipe implements PipeTransform {\n\n  transform(value: Resort): string {\n    switch (value) {\n      case Resort.KOLOBRZEG:\n        return 'Kołobrzeg';\n      case Resort.MIELNO:\n        return 'Mielno';\n      case Resort.NIECHORZE:\n        return 'Niechorze';\n      case Resort.POBIEROWO:\n        return 'Pobierowo';\n      case Resort.ROWY:\n        return 'Rowy';\n      case Resort.USTRONIE_MORSKIE:\n        return 'Ustronie Morskie';\n      default:\n        return 'Brak nazwy';\n    }\n  }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Resort } from '../model/resort';\nimport { AccommodationType } from '../model/accommodation-type';\n\n@Component({\n  selector: 'app-criteria',\n  templateUrl: './criteria.component.html',\n  styleUrls: ['./criteria.component.css'],\n})\nexport class CriteriaComponent implements OnInit {\n  public accommodationTypes: FormGroup;\n  public form: FormGroup;\n  public resorts: FormGroup;\n\n  public readonly Resort = Resort;\n  public readonly AccommodationType = AccommodationType;\n  public readonly resortsMap = new Map<Resort, any>();\n  public readonly accommodationTypeMap = new Map<AccommodationType, any>();\n\n  @Output() public formEmitter: EventEmitter<any> = new EventEmitter();\n\n  public constructor() {\n    this.resortsMap.set(Resort.POBIEROWO, {\n      background: 'assets/pics/pobierowo.png',\n    });\n    this.resortsMap.set(Resort.KOLOBRZEG, {\n      background: 'assets/pics/kolobrzeg.png',\n    });\n    this.resortsMap.set(Resort.ROWY, { background: 'assets/pics/rowy.png' });\n    this.resortsMap.set(Resort.NIECHORZE, {\n      background: 'assets/pics/niechorze.png',\n    });\n    this.resortsMap.set(Resort.USTRONIE_MORSKIE, {\n      background: 'assets/pics/ustronie_morskie.png',\n    });\n    this.resortsMap.set(Resort.MIELNO, {\n      background: 'assets/pics/mielno.png',\n    });\n\n    this.accommodationTypeMap.set(AccommodationType.HOUSE, {\n      background: 'assets/pics/house.png',\n    });\n    this.accommodationTypeMap.set(AccommodationType.APARTMENT_40, {\n      background: 'assets/pics/apartment-40.png',\n    });\n    this.accommodationTypeMap.set(AccommodationType.APARTMENT_55, {\n      background: 'assets/pics/apartment-55.png',\n    });\n\n    this.form = new FormGroup({});\n    this.form.addControl('dateFrom', new FormControl('2021-05-01'));\n    this.form.addControl('dateTo', new FormControl('2021-05-31'));\n\n    this.resorts = new FormGroup({});\n    this.resorts.addControl(\n      Resort.USTRONIE_MORSKIE.toString(),\n      new FormControl(false)\n    );\n    this.resorts.addControl(Resort.KOLOBRZEG.toString(), new FormControl(false));\n    this.resorts.addControl(Resort.POBIEROWO.toString(), new FormControl(true));\n    this.resorts.addControl(Resort.ROWY.toString(), new FormControl(false));\n    this.resorts.addControl(Resort.NIECHORZE.toString(), new FormControl(false));\n    this.resorts.addControl(Resort.MIELNO.toString(), new FormControl(false));\n\n    this.accommodationTypes = new FormGroup({});\n    this.accommodationTypes.addControl(\n      AccommodationType.HOUSE.toString(),\n      new FormControl(true)\n    );\n    this.accommodationTypes.addControl(\n      AccommodationType.APARTMENT_40.toString(),\n      new FormControl(false)\n    );\n    this.accommodationTypes.addControl(\n      AccommodationType.APARTMENT_55.toString(),\n      new FormControl(false)\n    );\n\n    this.form.addControl('resorts', this.resorts);\n    this.form.addControl('accommodationTypes', this.accommodationTypes);\n  }\n\n  public ngOnInit(): void {}\n\n  public clicked(): void {\n    this.formEmitter.emit(this.form.value);\n  }\n}\n","<form [formGroup]=\"form\" class=\"form-group\" style=\"width: 100%\">\n  <div class=\"row no-gutters criteria-header\">\n    <div class=\"col-12\">Od do</div>\n  </div>\n  <div class=\"row no-gutters criteria-section\">\n    <div class=\"col-4\">\n      <label>\n        <input type=\"text\" formControlName=\"dateFrom\" class=\"form-control\" />\n      </label>\n    </div>\n    <div class=\"col-4\">\n      <label>\n        <input type=\"text\" formControlName=\"dateTo\" class=\"form-control\" />\n      </label>\n    </div>\n    <div class=\"col-4\"></div>\n  </div>\n  <div class=\"row no-gutters criteria-header\">\n    <div class=\"col-12\">Lokalizacja</div>\n  </div>\n  <div class=\"row no-gutters criteria-section\">\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.POBIEROWO).background\"\n          [control]=\"form.get('resorts').get(Resort.POBIEROWO.toString())\"\n          [controlName]=\"Resort.POBIEROWO.toString()\"\n          [title]=\"Resort.POBIEROWO | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.ROWY).background\"\n          [control]=\"form.get('resorts').get(Resort.ROWY.toString())\"\n          [controlName]=\"Resort.ROWY.toString()\"\n          [title]=\"Resort.ROWY | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.KOLOBRZEG).background\"\n          [control]=\"form.get('resorts').get(Resort.KOLOBRZEG.toString())\"\n          [controlName]=\"Resort.KOLOBRZEG.toString()\"\n          [title]=\"Resort.KOLOBRZEG | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.NIECHORZE).background\"\n          [control]=\"form.get('resorts').get(Resort.NIECHORZE.toString())\"\n          [controlName]=\"Resort.NIECHORZE.toString()\"\n          [title]=\"Resort.NIECHORZE | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.USTRONIE_MORSKIE).background\"\n          [control]=\"\n            form.get('resorts').get(Resort.USTRONIE_MORSKIE.toString())\n          \"\n          [controlName]=\"Resort.USTRONIE_MORSKIE.toString()\"\n          [title]=\"Resort.USTRONIE_MORSKIE | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"resortsMap.get(Resort.MIELNO).background\"\n          [control]=\"form.get('resorts').get(Resort.MIELNO.toString())\"\n          [controlName]=\"Resort.MIELNO.toString()\"\n          [title]=\"Resort.MIELNO | resort\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n  </div>\n  <div class=\"row no-gutters criteria-header\">\n    <div class=\"col-6 col-sm-4\">Rodzaj zakwaterowania</div>\n  </div>\n  <div class=\"row no-gutters criteria-section\">\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"\n            accommodationTypeMap.get(AccommodationType.HOUSE).background\n          \"\n          [controlName]=\"AccommodationType.HOUSE.toString()\"\n          [control]=\"\n            form\n              .get('accommodationTypes')\n              .get(AccommodationType.HOUSE.toString())\n          \"\n          [title]=\"AccommodationType.HOUSE | accommodationType\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"\n            accommodationTypeMap.get(AccommodationType.APARTMENT_40).background\n          \"\n          [controlName]=\"AccommodationType.APARTMENT_55.toString()\"\n          [control]=\"\n            form\n              .get('accommodationTypes')\n              .get(AccommodationType.APARTMENT_40.toString())\n          \"\n          [title]=\"AccommodationType.APARTMENT_40 | accommodationType\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n    <div class=\"col-6 col-sm-4\">\n      <div class=\"criteria-resort\">\n        <app-tile-selectable\n          [background]=\"\n            accommodationTypeMap.get(AccommodationType.APARTMENT_55).background\n          \"\n          [controlName]=\"AccommodationType.APARTMENT_55.toString()\"\n          [control]=\"\n            form\n              .get('accommodationTypes')\n              .get(AccommodationType.APARTMENT_55.toString())\n          \"\n          [title]=\"AccommodationType.APARTMENT_55 | accommodationType\"\n        ></app-tile-selectable>\n      </div>\n    </div>\n  </div>\n  <div class=\"row no-gutters criteria-header\">\n    <div class=\"col-12\">\n      <button (click)=\"clicked()\" class=\"btn btn-primary\">Pobierz dane</button>\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpClientXsrfModule} from '@angular/common/http';\nimport {Resort} from './model/resort';\nimport {AccommodationType} from './model/accommodation-type';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  public constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  public checkAvailability(\n    dateFrom: string,\n    dateTo: string,\n    resort: Resort,\n    accommodationType: AccommodationType\n  ): Observable<string> {\n    const body = {\n      date_from: dateFrom,\n      date_to: dateTo,\n      resort,\n      accommodation: accommodationType\n    };\n    return this.httpClient.post<string>(\n      'https://holidaypark.pl/api/rent/available-apartments/',\n      body\n    );\n  }\n\n}\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Stay } from '../model/stay';\nimport { Resort } from '../model/resort';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css'],\n})\nexport class ResultsComponent implements OnInit, OnChanges {\n  @Input() public stays: Stay[];\n  @Input() public resorts: Resort[];\n\n  public constructor(private appService: AppService) {}\n\n  public ngOnInit(): void {}\n\n  public ngOnChanges(): void {}\n}\n","<div class=\"row no-gutters\">\n  <table *ngIf=\"stays.length\" class=\"results\">\n    <tr>\n      <th></th>\n      <th></th>\n      <th\n        *ngFor=\"let resort of resorts; index as i\"\n      >\n        {{ resort | resort }}\n      </th>\n    </tr>\n    <tr *ngFor=\"let stay of stays; index as row\">\n      <td>\n        {{ stay.dateFrom | date: \"yyyy-LL-dd\" }} -\n        {{ stay.dateTo | date: \"yyyy-LL-dd\" }}\n      </td>\n      <td>\n        {{ stay.dateTo | date: \"EEEE\" | weekday }}\n      </td>\n      <td *ngFor=\"let stayResort of stay.stayResorts; index as column\">\n        <div>\n          <app-cell\n            [dateFrom]=\"stay.dateFrom\"\n            [dateTo]=\"stay.dateTo\"\n            [stayResort]=\"stayResort\"\n          >\n          </app-cell>\n        </div>\n      </td>\n    </tr>\n  </table>\n\n</div>\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {HelperService} from './helper.service';\nimport {Resort} from './model/resort';\nimport {AccommodationType} from './model/accommodation-type';\nimport {Stay} from './model/stay';\nimport {WEEKDAY} from './model/week-day';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n  public stays: Stay[] = [];\n  public resorts: Resort[] = [];\n\n  public constructor(\n    private helperService: HelperService\n  ) {}\n\n  public resultsPrepare(\n    dateFrom: Date,\n    dateTo: Date,\n    resorts: Resort[],\n    accommodationTypes: AccommodationType[]\n  ): void {\n\n      this.stays = [];\n\n      const currentDate = new Date(dateFrom);\n      let stayFrom: Date;\n      let stayTo: Date;\n\n      while (currentDate < dateTo) {\n        stayFrom = new Date(currentDate);\n\n        if (\n          stayFrom.getDay() === WEEKDAY.SUNDAY ||\n          stayFrom.getDay() === WEEKDAY.SATURDAY ||\n          stayFrom.getDay() === WEEKDAY.FRIDAY\n        ) {\n\n          stayTo = new Date(stayFrom);\n          stayTo.setDate(stayTo.getDate() + 7);\n          this.stays.push(\n            new Stay(\n              stayFrom,\n              stayTo,\n              resorts,\n              accommodationTypes\n            )\n          );\n        }\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n  }\n\n  public rebuild(value: any): void {\n    const resorts = Object.keys(value.resorts).map((key) => {\n      if (value.resorts[key]) {\n        return +key;\n      }\n      else {\n        return null;\n      }\n    }).filter(resort => resort);\n    this.resorts = resorts;\n\n    const accommodationTypes = Object.keys(value.accommodationTypes).map((key) => {\n      if (value.accommodationTypes[key]) {\n        return +key;\n      }\n      else {\n        return null;\n      }\n    }).filter(accommodationType => accommodationType);\n\n    this.resultsPrepare(\n      new Date(value.dateFrom),\n      new Date(value.dateTo),\n      resorts,\n      accommodationTypes\n    );\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"row header\">\n    <app-criteria (formEmitter)=\"rebuild($event)\"></app-criteria>\n  </div>\n\n  <div class=\"row result\">\n    <app-results [stays]=\"stays\" [resorts]=\"resorts\"></app-results>\n  </div>\n\n</div>\n","export enum AccommodationType {\r\n  EMPTY,\r\n  HOUSE,\r\n  APARTMENT_40,\r\n  APARTMENT_55\r\n}\r\n","import {Resort} from './resort';\r\nimport {Availability, StayResort} from './stayResort';\r\nimport {AccommodationType} from './accommodation-type';\r\n\r\nexport class Stay {\r\n  dateFrom: Date;\r\n  dateTo: Date;\r\n  stayResorts: StayResort[] = [];\r\n\r\n  public constructor(\r\n    dateFrom: Date,\r\n    dateTo: Date,\r\n    resorts: Resort[],\r\n    accommodationTypes: AccommodationType[]\r\n  ) {\r\n    this.dateFrom = dateFrom;\r\n    this.dateTo = dateTo;\r\n\r\n    resorts.forEach((resort: Resort) => {\r\n      this.stayResorts.push({\r\n        resort,\r\n        availabilities: this.addAvailabilities(accommodationTypes)\r\n      });\r\n    });\r\n  }\r\n\r\n  private addAvailabilities(accommodationTypes: AccommodationType[]): Availability[] {\r\n    return accommodationTypes.map((accommodationType: AccommodationType) => {\r\n      return {\r\n        accommodationType,\r\n        number: 0\r\n      };\r\n    });\r\n  }\r\n}\r\n","import {AccommodationTypePipe} from './common/accommodation-type.pipe';\nimport {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {CellComponent} from './cell/cell.component';\nimport {CriteriaComponent} from './criteria/criteria.component';\nimport {DatePipe} from '@angular/common';\nimport {HelperService} from './helper.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ResortPipe} from './common/resort.pipe';\nimport {ResultsComponent} from './results/results.component';\nimport {TileSelectableComponent} from './tile-selectable/tile-selectable.component';\nimport { WeekdayPipe } from './weekday.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CriteriaComponent,\n    ResortPipe,\n    ResultsComponent,\n    CellComponent,\n    AccommodationTypePipe,\n    TileSelectableComponent,\n    WeekdayPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    HelperService,\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport { Availability, StayResort } from '../model/stayResort';\nimport { AppService } from '../app.service';\nimport { DatePipe } from '@angular/common';\nimport {forkJoin, Observable} from 'rxjs';\nimport {CombineLatestOperator} from 'rxjs/internal-compatibility';\nimport {combineAll} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.css'],\n})\nexport class CellComponent implements OnInit, OnChanges {\n  @Input() public dateFrom: Date;\n  @Input() public dateTo: Date;\n  @Input() public stayResort: StayResort;\n\n  public ready = false;\n\n  public observables: Observable<any>[] = [];\n\n  public constructor(\n    private appService: AppService,\n    private datePipe: DatePipe\n  ) {}\n\n  public ngOnInit(): void {}\n\n  public ngOnChanges(): void {\n    if (this.stayResort) {\n      this.stayResort.availabilities.forEach((availability: Availability) => {\n        const obs: Observable<any> = this.appService.checkAvailability(\n          this.datePipe.transform(this.dateFrom, 'yyyy-LL-dd'),\n          this.datePipe.transform(this.dateTo, 'yyyy-LL-dd'),\n          this.stayResort.resort,\n          availability.accommodationType\n        );\n        obs.subscribe((response: any) => {\n          availability.number = response.apartments.length;\n        });\n        this.observables.push(obs);\n        const test = forkJoin(this.observables);\n        test.subscribe(() => {\n          this.ready = true;\n        });\n      });\n    }\n  }\n}\n","<div\n  *ngFor=\"let availability of stayResort.availabilities\"\n  class=\"cell\"\n  [ngClass]=\"{ 'cell--ready': ready }\"\n>\n  {{ availability.accommodationType | accommodationType }}:\n  {{ availability.number }}\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HelperService {\n  public constructor() {}\n\n  public formatDate(date: Date): string {\n    let month = '' + (date.getMonth() + 1);\n    let day = '' + date.getDate();\n    const year = date.getFullYear();\n\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  }\n}\n","export enum Resort {\r\n  EMPTY,\r\n  POBIEROWO,\r\n  USTRONIE_MORSKIE,\r\n  EMPTY_2,\r\n  EMPTY_3,\r\n  NIECHORZE,\r\n  ROWY,\r\n  KOLOBRZEG,\r\n  MIELNO\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-tile-selectable',\n  templateUrl: './tile-selectable.component.html',\n  styleUrls: ['./tile-selectable.component.css'],\n})\nexport class TileSelectableComponent implements OnInit {\n  @Input() background: string;\n  @Input() control: AbstractControl;\n  @Input() controlName: string;\n  @Input() title: string;\n\n  public constructor() {}\n\n  public ngOnInit(): void {\n    if (this.control) {\n      this.control.valueChanges.subscribe((value: any) => {});\n    }\n  }\n\n  public changeSelection(): void {\n    this.control.patchValue(!this.control.value);\n  }\n}\n","<div\n  class=\"tile-container\"\n>\n  <div class=\"tile-image\">\n    <img [src]=\"background\" alt = \"Opis\">\n  </div>\n  <div\n    class=\"tile-title\">\n    <div>\n    {{ title }}\n    </div>\n  </div>\n  <div\n    class=\"tile-overlay\"\n    (click)=\"changeSelection()\"\n    [ngClass]=\"{ 'tile-overlay--selected': control.value }\"\n  ></div>\n</div>\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {AccommodationType} from '../model/accommodation-type';\n\n@Pipe({\n  name: 'accommodationType'\n})\nexport class AccommodationTypePipe implements PipeTransform {\n\n  transform(value: AccommodationType): string {\n    switch (value) {\n      case AccommodationType.HOUSE:\n        return 'Domek';\n      case AccommodationType.APARTMENT_40:\n        return 'A40';\n      case AccommodationType.APARTMENT_55:\n        return 'A55';\n      default:\n        return 'Brak nazwy';\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}